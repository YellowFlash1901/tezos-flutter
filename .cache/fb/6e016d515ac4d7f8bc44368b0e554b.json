{"id":"node_modules/@airgap/beacon-sdk/dist/transports/P2PTransport.js","dependencies":[{"name":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\transports\\P2PTransport.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\package.json","includedInParent":true,"mtime":1632633242012},{"name":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\package.json","includedInParent":true,"mtime":1632638194064},{"name":"../utils/Logger","loc":{"line":53,"column":23},"parent":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\transports\\P2PTransport.js","resolved":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\utils\\Logger.js"},{"name":"..","loc":{"line":54,"column":18},"parent":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\transports\\P2PTransport.js","resolved":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\index.js"},{"name":"../events","loc":{"line":55,"column":23},"parent":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\transports\\P2PTransport.js","resolved":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\events.js"},{"name":"../managers/PeerManager","loc":{"line":56,"column":28},"parent":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\transports\\P2PTransport.js","resolved":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\managers\\PeerManager.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.P2PTransport = void 0;\nvar Logger_1 = require(\"../utils/Logger\");\nvar __1 = require(\"..\");\nvar events_1 = require(\"../events\");\nvar PeerManager_1 = require(\"../managers/PeerManager\");\nvar logger = new Logger_1.Logger('Transport');\nvar P2PTransport = /** @class */ (function (_super) {\n    __extends(P2PTransport, _super);\n    function P2PTransport(name, keyPair, storage, events, isDapp) {\n        var _this = _super.call(this, name) || this;\n        _this.type = __1.TransportType.P2P;\n        _this.isDapp = true;\n        // Make sure we only listen once\n        _this.listeningForChannelOpenings = false;\n        _this.keyPair = keyPair;\n        _this.storage = storage;\n        _this.events = events;\n        _this.isDapp = isDapp;\n        _this.client = new __1.P2PCommunicationClient(_this.name, _this.keyPair, 1, false);\n        _this.peerManager = new PeerManager_1.PeerManager(storage);\n        return _this;\n    }\n    P2PTransport.isAvailable = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(true)];\n            });\n        });\n    };\n    P2PTransport.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var knownPeers, connectionPromises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.log('connect');\n                        this._isConnected = __1.TransportStatus.CONNECTING;\n                        return [4 /*yield*/, this.client.start()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.peerManager.getPeers()];\n                    case 2:\n                        knownPeers = _a.sent();\n                        if (!(knownPeers.length > 0)) return [3 /*break*/, 4];\n                        logger.log('connect', \"connecting to \" + knownPeers.length + \" peers\");\n                        connectionPromises = knownPeers.map(function (peer) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {\n                            return [2 /*return*/, this.listen(peer.publicKey)];\n                        }); }); });\n                        return [4 /*yield*/, Promise.all(connectionPromises)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 4:\n                        if (!this.isDapp) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.connectNewPeer()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [4 /*yield*/, _super.prototype.connect.call(this)];\n                    case 7:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    P2PTransport.prototype.reconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isDapp) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.connectNewPeer()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    P2PTransport.prototype.connectNewPeer = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                logger.log('connectNewPeer');\n                return [2 /*return*/, new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, _b, _c;\n                        var _this = this;\n                        return __generator(this, function (_d) {\n                            switch (_d.label) {\n                                case 0:\n                                    if (!!this.listeningForChannelOpenings) return [3 /*break*/, 2];\n                                    return [4 /*yield*/, this.client.listenForChannelOpening(function (publicKey) { return __awaiter(_this, void 0, void 0, function () {\n                                            var newPeer;\n                                            return __generator(this, function (_a) {\n                                                switch (_a.label) {\n                                                    case 0:\n                                                        logger.log('connectNewPeer', \"new publicKey \" + publicKey);\n                                                        newPeer = { name: '', publicKey: publicKey, relayServer: '' };\n                                                        return [4 /*yield*/, this.peerManager.hasPeer(publicKey)];\n                                                    case 1:\n                                                        if (!!(_a.sent())) return [3 /*break*/, 4];\n                                                        return [4 /*yield*/, this.peerManager.addPeer(newPeer)];\n                                                    case 2:\n                                                        _a.sent();\n                                                        return [4 /*yield*/, this.listen(publicKey)];\n                                                    case 3:\n                                                        _a.sent();\n                                                        _a.label = 4;\n                                                    case 4:\n                                                        this.events\n                                                            .emit(events_1.BeaconEvent.P2P_CHANNEL_CONNECT_SUCCESS, newPeer)\n                                                            .catch(function (emitError) { return console.warn(emitError); });\n                                                        resolve();\n                                                        return [2 /*return*/];\n                                                }\n                                            });\n                                        }); })];\n                                case 1:\n                                    _d.sent();\n                                    this.listeningForChannelOpenings = true;\n                                    _d.label = 2;\n                                case 2:\n                                    _b = (_a = this.events).emit;\n                                    _c = [events_1.BeaconEvent.P2P_LISTEN_FOR_CHANNEL_OPEN];\n                                    return [4 /*yield*/, this.client.getHandshakeInfo()];\n                                case 3:\n                                    _b.apply(_a, _c.concat([_d.sent()]))\n                                        .catch(function (emitError) { return console.warn(emitError); });\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    P2PTransport.prototype.getPeers = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.peerManager.getPeers()];\n            });\n        });\n    };\n    P2PTransport.prototype.addPeer = function (newPeer) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.peerManager.hasPeer(newPeer.publicKey)];\n                    case 1:\n                        if (!!(_a.sent())) return [3 /*break*/, 5];\n                        logger.log('addPeer', newPeer);\n                        return [4 /*yield*/, this.peerManager.addPeer({\n                                name: newPeer.name,\n                                publicKey: newPeer.publicKey,\n                                relayServer: newPeer.relayServer\n                            })];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.client.openChannel(newPeer.publicKey, newPeer.relayServer)]; // TODO: Should we have a confirmation here?\n                    case 3:\n                        _a.sent(); // TODO: Should we have a confirmation here?\n                        return [4 /*yield*/, this.listen(newPeer.publicKey)]; // TODO: Prevent channels from being opened multiple times\n                    case 4:\n                        _a.sent(); // TODO: Prevent channels from being opened multiple times\n                        return [3 /*break*/, 6];\n                    case 5:\n                        logger.log('addPeer', 'peer already added, skipping', newPeer);\n                        _a.label = 6;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    P2PTransport.prototype.removePeer = function (peerToBeRemoved) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.log('removePeer', peerToBeRemoved);\n                        return [4 /*yield*/, this.peerManager.removePeer(peerToBeRemoved.publicKey)];\n                    case 1:\n                        _a.sent();\n                        if (!this.client) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.client.unsubscribeFromEncryptedMessage(peerToBeRemoved.publicKey)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    P2PTransport.prototype.removeAllPeers = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.log('removeAllPeers');\n                        return [4 /*yield*/, this.peerManager.removeAllPeers()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.client.unsubscribeFromEncryptedMessages()];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    P2PTransport.prototype.send = function (message, recipient) {\n        return __awaiter(this, void 0, void 0, function () {\n            var knownPeers, promises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.storage.get(__1.StorageKey.TRANSPORT_P2P_PEERS)];\n                    case 1:\n                        knownPeers = _a.sent();\n                        if (!recipient) return [3 /*break*/, 2];\n                        if (!knownPeers.some(function (peer) { return peer.publicKey === recipient; })) {\n                            throw new Error('Recipient unknown');\n                        }\n                        return [2 /*return*/, this.client.sendMessage(recipient, message)];\n                    case 2:\n                        promises = knownPeers.map(function (peer) { return _this.client.sendMessage(peer.publicKey, message); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 3: return [2 /*return*/, (_a.sent())[0]];\n                }\n            });\n        });\n    };\n    P2PTransport.prototype.listen = function (publicKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.client\n                            .listenForEncryptedMessage(publicKey, function (message) {\n                            var connectionContext = {\n                                origin: __1.Origin.P2P,\n                                id: publicKey\n                            };\n                            _this.notifyListeners(message, connectionContext).catch(function (error) {\n                                throw error;\n                            });\n                        })\n                            .catch(function (error) {\n                            throw error;\n                        })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return P2PTransport;\n}(__1.Transport));\nexports.P2PTransport = P2PTransport;\n"},"sourceMaps":{"js":{"version":3,"file":"P2PTransport.js","sourceRoot":"","sources":["../../src/transports/P2PTransport.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"85d23d8019acdcbb3474e69c80cf11be","cacheData":{"env":{}}}