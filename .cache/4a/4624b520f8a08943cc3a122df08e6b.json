{"id":"node_modules/@airgap/beacon-sdk/dist/Serializer.js","dependencies":[{"name":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\Serializer.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\package.json","includedInParent":true,"mtime":1632633242012},{"name":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\package.json","includedInParent":true,"mtime":1632638194064},{"name":"bs58check","loc":{"line":40,"column":24},"parent":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\Serializer.js","resolved":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\bs58check\\index.js"},{"name":"buffer","parent":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\@airgap\\beacon-sdk\\dist\\Serializer.js","resolved":"C:\\Users\\varda\\OneDrive\\Desktop\\tezos-web\\node_modules\\node-libs-browser\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Serializer = void 0;\nvar bs58check = require(\"bs58check\");\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    Serializer.prototype.serialize = function (message) {\n        return __awaiter(this, void 0, void 0, function () {\n            var str;\n            return __generator(this, function (_a) {\n                str = JSON.stringify(message);\n                return [2 /*return*/, bs58check.encode(Buffer.from(str))];\n            });\n        });\n    };\n    Serializer.prototype.deserialize = function (encoded) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (typeof encoded !== 'string') {\n                    throw new Error('Encoded payload needs to be a string');\n                }\n                return [2 /*return*/, JSON.parse(bs58check.decode(encoded).toString())];\n            });\n        });\n    };\n    return Serializer;\n}());\nexports.Serializer = Serializer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../src/Serializer.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":41,"column":0}},{"source":"../src/Serializer.ts","name":null,"original":{"line":1,"column":38},"generated":{"line":41,"column":37}},{"source":"../src/Serializer.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":42,"column":0}},{"source":"../src/Serializer.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":43,"column":4}},{"source":"../src/Serializer.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":44,"column":4}},{"source":"../src/Serializer.ts","name":null,"original":{"line":16,"column":1},"generated":{"line":44,"column":5}},{"source":"../src/Serializer.ts","name":null,"original":{"line":4,"column":15},"generated":{"line":45,"column":4}},{"source":"../src/Serializer.ts","name":null,"original":{"line":4,"column":24},"generated":{"line":45,"column":34}},{"source":"../src/Serializer.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":45,"column":37}},{"source":"../src/Serializer.ts","name":null,"original":{"line":4,"column":25},"generated":{"line":45,"column":47}},{"source":"../src/Serializer.ts","name":null,"original":{"line":4,"column":41},"generated":{"line":45,"column":54}},{"source":"../src/Serializer.ts","name":null,"original":{"line":5,"column":10},"generated":{"line":49,"column":16}},{"source":"../src/Serializer.ts","name":null,"original":{"line":5,"column":13},"generated":{"line":49,"column":19}},{"source":"../src/Serializer.ts","name":null,"original":{"line":5,"column":16},"generated":{"line":49,"column":22}},{"source":"../src/Serializer.ts","name":null,"original":{"line":5,"column":20},"generated":{"line":49,"column":26}},{"source":"../src/Serializer.ts","name":null,"original":{"line":5,"column":21},"generated":{"line":49,"column":27}},{"source":"../src/Serializer.ts","name":null,"original":{"line":5,"column":30},"generated":{"line":49,"column":36}},{"source":"../src/Serializer.ts","name":null,"original":{"line":5,"column":31},"generated":{"line":49,"column":37}},{"source":"../src/Serializer.ts","name":null,"original":{"line":5,"column":38},"generated":{"line":49,"column":44}},{"source":"../src/Serializer.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":49,"column":45}},{"source":"../src/Serializer.ts","name":null,"original":{"line":5,"column":39},"generated":{"line":49,"column":46}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":4},"generated":{"line":50,"column":16}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":11},"generated":{"line":50,"column":38}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":20},"generated":{"line":50,"column":47}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":21},"generated":{"line":50,"column":48}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":27},"generated":{"line":50,"column":54}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":28},"generated":{"line":50,"column":55}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":34},"generated":{"line":50,"column":61}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":35},"generated":{"line":50,"column":62}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":39},"generated":{"line":50,"column":66}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":40},"generated":{"line":50,"column":67}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":43},"generated":{"line":50,"column":70}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":44},"generated":{"line":50,"column":71}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":45},"generated":{"line":50,"column":72}},{"source":"../src/Serializer.ts","name":null,"original":{"line":7,"column":45},"generated":{"line":50,"column":74}},{"source":"../src/Serializer.ts","name":null,"original":{"line":8,"column":3},"generated":{"line":53,"column":5}},{"source":"../src/Serializer.ts","name":null,"original":{"line":9,"column":15},"generated":{"line":54,"column":4}},{"source":"../src/Serializer.ts","name":null,"original":{"line":9,"column":26},"generated":{"line":54,"column":36}},{"source":"../src/Serializer.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":54,"column":39}},{"source":"../src/Serializer.ts","name":null,"original":{"line":9,"column":27},"generated":{"line":54,"column":49}},{"source":"../src/Serializer.ts","name":null,"original":{"line":9,"column":42},"generated":{"line":54,"column":56}},{"source":"../src/Serializer.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":57,"column":16}},{"source":"../src/Serializer.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":57,"column":20}},{"source":"../src/Serializer.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":57,"column":27}},{"source":"../src/Serializer.ts","name":null,"original":{"line":10,"column":22},"generated":{"line":57,"column":34}},{"source":"../src/Serializer.ts","name":null,"original":{"line":10,"column":27},"generated":{"line":57,"column":39}},{"source":"../src/Serializer.ts","name":null,"original":{"line":10,"column":35},"generated":{"line":57,"column":47}},{"source":"../src/Serializer.ts","name":null,"original":{"line":10,"column":37},"generated":{"line":57,"column":49}},{"source":"../src/Serializer.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":58,"column":20}},{"source":"../src/Serializer.ts","name":null,"original":{"line":11,"column":12},"generated":{"line":58,"column":26}},{"source":"../src/Serializer.ts","name":null,"original":{"line":11,"column":16},"generated":{"line":58,"column":30}},{"source":"../src/Serializer.ts","name":null,"original":{"line":11,"column":21},"generated":{"line":58,"column":35}},{"source":"../src/Serializer.ts","name":null,"original":{"line":11,"column":22},"generated":{"line":58,"column":36}},{"source":"../src/Serializer.ts","name":null,"original":{"line":11,"column":60},"generated":{"line":58,"column":74}},{"source":"../src/Serializer.ts","name":null,"original":{"line":11,"column":61},"generated":{"line":58,"column":75}},{"source":"../src/Serializer.ts","name":null,"original":{"line":11,"column":61},"generated":{"line":58,"column":76}},{"source":"../src/Serializer.ts","name":null,"original":{"line":12,"column":5},"generated":{"line":59,"column":17}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":60,"column":16}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":11},"generated":{"line":60,"column":38}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":15},"generated":{"line":60,"column":42}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":16},"generated":{"line":60,"column":43}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":21},"generated":{"line":60,"column":48}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":22},"generated":{"line":60,"column":49}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":31},"generated":{"line":60,"column":58}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":32},"generated":{"line":60,"column":59}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":38},"generated":{"line":60,"column":65}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":39},"generated":{"line":60,"column":66}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":46},"generated":{"line":60,"column":73}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":47},"generated":{"line":60,"column":74}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":48},"generated":{"line":60,"column":75}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":56},"generated":{"line":60,"column":83}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":58},"generated":{"line":60,"column":85}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":59},"generated":{"line":60,"column":86}},{"source":"../src/Serializer.ts","name":null,"original":{"line":14,"column":59},"generated":{"line":60,"column":88}},{"source":"../src/Serializer.ts","name":null,"original":{"line":15,"column":3},"generated":{"line":63,"column":5}},{"source":"../src/Serializer.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":64,"column":4}},{"source":"../src/Serializer.ts","name":null,"original":{"line":16,"column":1},"generated":{"line":64,"column":21}},{"source":"../src/Serializer.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":65,"column":0}},{"source":"../src/Serializer.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":65,"column":1}},{"source":"../src/Serializer.ts","name":null,"original":{"line":16,"column":1},"generated":{"line":65,"column":1}},{"source":"../src/Serializer.ts","name":null,"original":{"line":16,"column":1},"generated":{"line":65,"column":5}},{"source":"../src/Serializer.ts","name":null,"original":{"line":3,"column":13},"generated":{"line":66,"column":0}},{"source":"../src/Serializer.ts","name":null,"original":{"line":3,"column":23},"generated":{"line":66,"column":32}}],"sources":{},"lineCount":null}},"error":null,"hash":"616908d8325e0e7c5dc5fdfec132d091","cacheData":{"env":{}}}